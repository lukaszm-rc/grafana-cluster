'use strict';

System.register([], function (_export, _context) {
  var apply, toInteger, FUNC_ERROR_TEXT, nativeMax;

  function rest(func, start) {
    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    start = nativeMax(start === undefined ? func.length - 1 : toInteger(start), 0);
    return function () {
      var args = arguments,
          index = -1,
          length = nativeMax(args.length - start, 0),
          array = Array(length);
      while (++index < length) {
        array[index] = args[start + index];
      }
      switch (start) {
        case 0:
          return func.call(this, array);
        case 1:
          return func.call(this, args[0], array);
        case 2:
          return func.call(this, args[0], args[1], array);
      }
      var otherArgs = Array(start + 1);
      index = -1;
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = array;
      return apply(func, this, otherArgs);
    };
  }
  return {
    setters: [],
    execute: function () {
      apply = require('./_apply');
      toInteger = require('./toInteger');
      FUNC_ERROR_TEXT = 'Expected a function';
      nativeMax = Math.max;
      module.exports = rest;
    }
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5wbS9sb2Rhc2hANC4xMS4xL3Jlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQSxXQUFTLElBQVQsQ0FBYyxJQUFkLEVBQW9CLEtBQXBCLEVBQTJCO0FBQ3pCLFFBQUksT0FBTyxJQUFQLElBQWUsVUFBZixFQUEyQjtBQUM3QixZQUFNLElBQUksU0FBSixDQUFjLGVBQWQsQ0FBTixDQUQ2QjtLQUEvQjtBQUdBLFlBQVEsVUFBVSxVQUFVLFNBQVYsR0FBdUIsS0FBSyxNQUFMLEdBQWMsQ0FBZCxHQUFtQixVQUFVLEtBQVYsQ0FBMUMsRUFBNEQsQ0FBdEUsQ0FBUixDQUp5QjtBQUt6QixXQUFPLFlBQVc7QUFDaEIsVUFBSSxPQUFPLFNBQVA7VUFDQSxRQUFRLENBQUMsQ0FBRDtVQUNSLFNBQVMsVUFBVSxLQUFLLE1BQUwsR0FBYyxLQUFkLEVBQXFCLENBQS9CLENBQVQ7VUFDQSxRQUFRLE1BQU0sTUFBTixDQUFSLENBSlk7QUFLaEIsYUFBTyxFQUFFLEtBQUYsR0FBVSxNQUFWLEVBQWtCO0FBQ3ZCLGNBQU0sS0FBTixJQUFlLEtBQUssUUFBUSxLQUFSLENBQXBCLENBRHVCO09BQXpCO0FBR0EsY0FBUSxLQUFSO0FBQ0UsYUFBSyxDQUFMO0FBQ0UsaUJBQU8sS0FBSyxJQUFMLENBQVUsSUFBVixFQUFnQixLQUFoQixDQUFQLENBREY7QUFERixhQUdPLENBQUw7QUFDRSxpQkFBTyxLQUFLLElBQUwsQ0FBVSxJQUFWLEVBQWdCLEtBQUssQ0FBTCxDQUFoQixFQUF5QixLQUF6QixDQUFQLENBREY7QUFIRixhQUtPLENBQUw7QUFDRSxpQkFBTyxLQUFLLElBQUwsQ0FBVSxJQUFWLEVBQWdCLEtBQUssQ0FBTCxDQUFoQixFQUF5QixLQUFLLENBQUwsQ0FBekIsRUFBa0MsS0FBbEMsQ0FBUCxDQURGO0FBTEYsT0FSZ0I7QUFnQmhCLFVBQUksWUFBWSxNQUFNLFFBQVEsQ0FBUixDQUFsQixDQWhCWTtBQWlCaEIsY0FBUSxDQUFDLENBQUQsQ0FqQlE7QUFrQmhCLGFBQU8sRUFBRSxLQUFGLEdBQVUsS0FBVixFQUFpQjtBQUN0QixrQkFBVSxLQUFWLElBQW1CLEtBQUssS0FBTCxDQUFuQixDQURzQjtPQUF4QjtBQUdBLGdCQUFVLEtBQVYsSUFBbUIsS0FBbkIsQ0FyQmdCO0FBc0JoQixhQUFPLE1BQU0sSUFBTixFQUFZLElBQVosRUFBa0IsU0FBbEIsQ0FBUCxDQXRCZ0I7S0FBWCxDQUxrQjtHQUEzQjs7OztBQUpJLGNBQVEsUUFBUSxVQUFSO0FBQ1Isa0JBQVksUUFBUSxhQUFSO0FBQ1osd0JBQWtCO0FBQ2xCLGtCQUFZLEtBQUssR0FBTDtBQStCaEIsYUFBTyxPQUFQLEdBQWlCLElBQWpCIiwiZmlsZSI6Im5wbS9sb2Rhc2hANC4xMS4xL3Jlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAqLyBcbnZhciBhcHBseSA9IHJlcXVpcmUoJy4vX2FwcGx5JyksXG4gICAgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi90b0ludGVnZXInKTtcbnZhciBGVU5DX0VSUk9SX1RFWFQgPSAnRXhwZWN0ZWQgYSBmdW5jdGlvbic7XG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXg7XG5mdW5jdGlvbiByZXN0KGZ1bmMsIHN0YXJ0KSB7XG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIHN0YXJ0ID0gbmF0aXZlTWF4KHN0YXJ0ID09PSB1bmRlZmluZWQgPyAoZnVuYy5sZW5ndGggLSAxKSA6IHRvSW50ZWdlcihzdGFydCksIDApO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgIGluZGV4ID0gLTEsXG4gICAgICAgIGxlbmd0aCA9IG5hdGl2ZU1heChhcmdzLmxlbmd0aCAtIHN0YXJ0LCAwKSxcbiAgICAgICAgYXJyYXkgPSBBcnJheShsZW5ndGgpO1xuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBhcnJheVtpbmRleF0gPSBhcmdzW3N0YXJ0ICsgaW5kZXhdO1xuICAgIH1cbiAgICBzd2l0Y2ggKHN0YXJ0KSB7XG4gICAgICBjYXNlIDA6XG4gICAgICAgIHJldHVybiBmdW5jLmNhbGwodGhpcywgYXJyYXkpO1xuICAgICAgY2FzZSAxOlxuICAgICAgICByZXR1cm4gZnVuYy5jYWxsKHRoaXMsIGFyZ3NbMF0sIGFycmF5KTtcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbCh0aGlzLCBhcmdzWzBdLCBhcmdzWzFdLCBhcnJheSk7XG4gICAgfVxuICAgIHZhciBvdGhlckFyZ3MgPSBBcnJheShzdGFydCArIDEpO1xuICAgIGluZGV4ID0gLTE7XG4gICAgd2hpbGUgKCsraW5kZXggPCBzdGFydCkge1xuICAgICAgb3RoZXJBcmdzW2luZGV4XSA9IGFyZ3NbaW5kZXhdO1xuICAgIH1cbiAgICBvdGhlckFyZ3Nbc3RhcnRdID0gYXJyYXk7XG4gICAgcmV0dXJuIGFwcGx5KGZ1bmMsIHRoaXMsIG90aGVyQXJncyk7XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IHJlc3Q7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
