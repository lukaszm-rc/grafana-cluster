'use strict';

System.register([], function (_export, _context) {
  var $export, sign, pow, EPSILON, EPSILON32, MAX32, MIN32, roundTiesToEven;
  return {
    setters: [],
    execute: function () {
      $export = require('./$.export');
      sign = require('./$.math-sign');
      pow = Math.pow;
      EPSILON = pow(2, -52);
      EPSILON32 = pow(2, -23);
      MAX32 = pow(2, 127) * (2 - EPSILON32);
      MIN32 = pow(2, -126);

      roundTiesToEven = function roundTiesToEven(n) {
        return n + 1 / EPSILON - 1 / EPSILON;
      };

      $export($export.S, 'Math', { fround: function fround(x) {
          var $abs = Math.abs(x),
              $sign = sign(x),
              a,
              result;
          if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
          a = (1 + EPSILON32 / EPSILON) * $abs;
          result = a - (a - $abs);
          if (result > MAX32 || result != result) return $sign * Infinity;
          return $sign * result;
        } });
    }
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5wbS9jb3JlLWpzQDEuMi42L21vZHVsZXMvZXM2Lm1hdGguZnJvdW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDSSxnQkFBVSxRQUFRLFlBQVI7QUFDVixhQUFPLFFBQVEsZUFBUjtBQUNQLFlBQU0sS0FBSyxHQUFMO0FBQ04sZ0JBQVUsSUFBSSxDQUFKLEVBQU8sQ0FBQyxFQUFEO0FBQ2pCLGtCQUFZLElBQUksQ0FBSixFQUFPLENBQUMsRUFBRDtBQUNuQixjQUFRLElBQUksQ0FBSixFQUFPLEdBQVAsS0FBZSxJQUFJLFNBQUosQ0FBZjtBQUNSLGNBQVEsSUFBSSxDQUFKLEVBQU8sQ0FBQyxHQUFEOztBQUNmLHdCQUFrQixTQUFsQixlQUFrQixDQUFTLENBQVQsRUFBWTtBQUNoQyxlQUFPLElBQUksSUFBSSxPQUFKLEdBQWMsSUFBSSxPQUFKLENBRE87T0FBWjs7QUFHdEIsY0FBUSxRQUFRLENBQVIsRUFBVyxNQUFuQixFQUEyQixFQUFDLFFBQVEsU0FBUyxNQUFULENBQWdCLENBQWhCLEVBQW1CO0FBQ25ELGNBQUksT0FBTyxLQUFLLEdBQUwsQ0FBUyxDQUFULENBQVA7Y0FDQSxRQUFRLEtBQUssQ0FBTCxDQUFSO2NBQ0EsQ0FGSjtjQUdJLE1BSEosQ0FEbUQ7QUFLbkQsY0FBSSxPQUFPLEtBQVAsRUFDRixPQUFPLFFBQVEsZ0JBQWdCLE9BQU8sS0FBUCxHQUFlLFNBQWYsQ0FBeEIsR0FBb0QsS0FBcEQsR0FBNEQsU0FBNUQsQ0FEVDtBQUVBLGNBQUksQ0FBQyxJQUFJLFlBQVksT0FBWixDQUFMLEdBQTRCLElBQTVCLENBUCtDO0FBUW5ELG1CQUFTLEtBQUssSUFBSSxJQUFKLENBQUwsQ0FSMEM7QUFTbkQsY0FBSSxTQUFTLEtBQVQsSUFBa0IsVUFBVSxNQUFWLEVBQ3BCLE9BQU8sUUFBUSxRQUFSLENBRFQ7QUFFQSxpQkFBTyxRQUFRLE1BQVIsQ0FYNEM7U0FBbkIsRUFBcEMiLCJmaWxlIjoibnBtL2NvcmUtanNAMS4yLjYvbW9kdWxlcy9lczYubWF0aC5mcm91bmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAqLyBcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi8kLmV4cG9ydCcpLFxuICAgIHNpZ24gPSByZXF1aXJlKCcuLyQubWF0aC1zaWduJyksXG4gICAgcG93ID0gTWF0aC5wb3csXG4gICAgRVBTSUxPTiA9IHBvdygyLCAtNTIpLFxuICAgIEVQU0lMT04zMiA9IHBvdygyLCAtMjMpLFxuICAgIE1BWDMyID0gcG93KDIsIDEyNykgKiAoMiAtIEVQU0lMT04zMiksXG4gICAgTUlOMzIgPSBwb3coMiwgLTEyNik7XG52YXIgcm91bmRUaWVzVG9FdmVuID0gZnVuY3Rpb24obikge1xuICByZXR1cm4gbiArIDEgLyBFUFNJTE9OIC0gMSAvIEVQU0lMT047XG59O1xuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge2Zyb3VuZDogZnVuY3Rpb24gZnJvdW5kKHgpIHtcbiAgICB2YXIgJGFicyA9IE1hdGguYWJzKHgpLFxuICAgICAgICAkc2lnbiA9IHNpZ24oeCksXG4gICAgICAgIGEsXG4gICAgICAgIHJlc3VsdDtcbiAgICBpZiAoJGFicyA8IE1JTjMyKVxuICAgICAgcmV0dXJuICRzaWduICogcm91bmRUaWVzVG9FdmVuKCRhYnMgLyBNSU4zMiAvIEVQU0lMT04zMikgKiBNSU4zMiAqIEVQU0lMT04zMjtcbiAgICBhID0gKDEgKyBFUFNJTE9OMzIgLyBFUFNJTE9OKSAqICRhYnM7XG4gICAgcmVzdWx0ID0gYSAtIChhIC0gJGFicyk7XG4gICAgaWYgKHJlc3VsdCA+IE1BWDMyIHx8IHJlc3VsdCAhPSByZXN1bHQpXG4gICAgICByZXR1cm4gJHNpZ24gKiBJbmZpbml0eTtcbiAgICByZXR1cm4gJHNpZ24gKiByZXN1bHQ7XG4gIH19KTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
