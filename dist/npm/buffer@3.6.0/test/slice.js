'use strict';

System.register([], function (_export, _context) {
  return {
    setters: [],
    execute: function () {
      /* */
      (function (process) {
        if (process.env.OBJECT_IMPL) global.TYPED_ARRAY_SUPPORT = false;
        var B = require('../index').Buffer;
        var test = require('tape');
        test('modifying buffer created by .slice() modifies original memory', function (t) {
          if (!B.TYPED_ARRAY_SUPPORT) return t.end();
          var buf1 = new B(26);
          for (var i = 0; i < 26; i++) {
            buf1[i] = i + 97;
          }
          var buf2 = buf1.slice(0, 3);
          t.equal(buf2.toString('ascii', 0, buf2.length), 'abc');
          buf2[0] = '!'.charCodeAt(0);
          t.equal(buf1.toString('ascii', 0, buf2.length), '!bc');
          t.end();
        });
        test('modifying parent buffer modifies .slice() buffer\'s memory', function (t) {
          if (!B.TYPED_ARRAY_SUPPORT) return t.end();
          var buf1 = new B(26);
          for (var i = 0; i < 26; i++) {
            buf1[i] = i + 97;
          }
          var buf2 = buf1.slice(0, 3);
          t.equal(buf2.toString('ascii', 0, buf2.length), 'abc');
          buf1[0] = '!'.charCodeAt(0);
          t.equal(buf2.toString('ascii', 0, buf2.length), '!bc');
          t.end();
        });
      })(require('process'));
    }
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5wbS9idWZmZXJAMy42LjAvdGVzdC9zbGljZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsT0FBQyxVQUFTLE9BQVQsRUFBa0I7QUFDakIsWUFBSSxRQUFRLEdBQVIsQ0FBWSxXQUFaLEVBQ0YsT0FBTyxtQkFBUCxHQUE2QixLQUE3QixDQURGO0FBRUEsWUFBSSxJQUFJLFFBQVEsVUFBUixFQUFvQixNQUFwQixDQUhTO0FBSWpCLFlBQUksT0FBTyxRQUFRLE1BQVIsQ0FBUCxDQUphO0FBS2pCLGFBQUssK0RBQUwsRUFBc0UsVUFBUyxDQUFULEVBQVk7QUFDaEYsY0FBSSxDQUFDLEVBQUUsbUJBQUYsRUFDSCxPQUFPLEVBQUUsR0FBRixFQUFQLENBREY7QUFFQSxjQUFJLE9BQU8sSUFBSSxDQUFKLENBQU0sRUFBTixDQUFQLENBSDRFO0FBSWhGLGVBQUssSUFBSSxJQUFJLENBQUosRUFBTyxJQUFJLEVBQUosRUFBUSxHQUF4QixFQUE2QjtBQUMzQixpQkFBSyxDQUFMLElBQVUsSUFBSSxFQUFKLENBRGlCO1dBQTdCO0FBR0EsY0FBSSxPQUFPLEtBQUssS0FBTCxDQUFXLENBQVgsRUFBYyxDQUFkLENBQVAsQ0FQNEU7QUFRaEYsWUFBRSxLQUFGLENBQVEsS0FBSyxRQUFMLENBQWMsT0FBZCxFQUF1QixDQUF2QixFQUEwQixLQUFLLE1BQUwsQ0FBbEMsRUFBZ0QsS0FBaEQsRUFSZ0Y7QUFTaEYsZUFBSyxDQUFMLElBQVUsSUFBSSxVQUFKLENBQWUsQ0FBZixDQUFWLENBVGdGO0FBVWhGLFlBQUUsS0FBRixDQUFRLEtBQUssUUFBTCxDQUFjLE9BQWQsRUFBdUIsQ0FBdkIsRUFBMEIsS0FBSyxNQUFMLENBQWxDLEVBQWdELEtBQWhELEVBVmdGO0FBV2hGLFlBQUUsR0FBRixHQVhnRjtTQUFaLENBQXRFLENBTGlCO0FBa0JqQixhQUFLLDREQUFMLEVBQW1FLFVBQVMsQ0FBVCxFQUFZO0FBQzdFLGNBQUksQ0FBQyxFQUFFLG1CQUFGLEVBQ0gsT0FBTyxFQUFFLEdBQUYsRUFBUCxDQURGO0FBRUEsY0FBSSxPQUFPLElBQUksQ0FBSixDQUFNLEVBQU4sQ0FBUCxDQUh5RTtBQUk3RSxlQUFLLElBQUksSUFBSSxDQUFKLEVBQU8sSUFBSSxFQUFKLEVBQVEsR0FBeEIsRUFBNkI7QUFDM0IsaUJBQUssQ0FBTCxJQUFVLElBQUksRUFBSixDQURpQjtXQUE3QjtBQUdBLGNBQUksT0FBTyxLQUFLLEtBQUwsQ0FBVyxDQUFYLEVBQWMsQ0FBZCxDQUFQLENBUHlFO0FBUTdFLFlBQUUsS0FBRixDQUFRLEtBQUssUUFBTCxDQUFjLE9BQWQsRUFBdUIsQ0FBdkIsRUFBMEIsS0FBSyxNQUFMLENBQWxDLEVBQWdELEtBQWhELEVBUjZFO0FBUzdFLGVBQUssQ0FBTCxJQUFVLElBQUksVUFBSixDQUFlLENBQWYsQ0FBVixDQVQ2RTtBQVU3RSxZQUFFLEtBQUYsQ0FBUSxLQUFLLFFBQUwsQ0FBYyxPQUFkLEVBQXVCLENBQXZCLEVBQTBCLEtBQUssTUFBTCxDQUFsQyxFQUFnRCxLQUFoRCxFQVY2RTtBQVc3RSxZQUFFLEdBQUYsR0FYNkU7U0FBWixDQUFuRSxDQWxCaUI7T0FBbEIsQ0FBRCxDQStCRyxRQUFRLFNBQVIsQ0EvQkgiLCJmaWxlIjoibnBtL2J1ZmZlckAzLjYuMC90ZXN0L3NsaWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKi8gXG4oZnVuY3Rpb24ocHJvY2Vzcykge1xuICBpZiAocHJvY2Vzcy5lbnYuT0JKRUNUX0lNUEwpXG4gICAgZ2xvYmFsLlRZUEVEX0FSUkFZX1NVUFBPUlQgPSBmYWxzZTtcbiAgdmFyIEIgPSByZXF1aXJlKCcuLi9pbmRleCcpLkJ1ZmZlcjtcbiAgdmFyIHRlc3QgPSByZXF1aXJlKCd0YXBlJyk7XG4gIHRlc3QoJ21vZGlmeWluZyBidWZmZXIgY3JlYXRlZCBieSAuc2xpY2UoKSBtb2RpZmllcyBvcmlnaW5hbCBtZW1vcnknLCBmdW5jdGlvbih0KSB7XG4gICAgaWYgKCFCLlRZUEVEX0FSUkFZX1NVUFBPUlQpXG4gICAgICByZXR1cm4gdC5lbmQoKTtcbiAgICB2YXIgYnVmMSA9IG5ldyBCKDI2KTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI2OyBpKyspIHtcbiAgICAgIGJ1ZjFbaV0gPSBpICsgOTc7XG4gICAgfVxuICAgIHZhciBidWYyID0gYnVmMS5zbGljZSgwLCAzKTtcbiAgICB0LmVxdWFsKGJ1ZjIudG9TdHJpbmcoJ2FzY2lpJywgMCwgYnVmMi5sZW5ndGgpLCAnYWJjJyk7XG4gICAgYnVmMlswXSA9ICchJy5jaGFyQ29kZUF0KDApO1xuICAgIHQuZXF1YWwoYnVmMS50b1N0cmluZygnYXNjaWknLCAwLCBidWYyLmxlbmd0aCksICchYmMnKTtcbiAgICB0LmVuZCgpO1xuICB9KTtcbiAgdGVzdCgnbW9kaWZ5aW5nIHBhcmVudCBidWZmZXIgbW9kaWZpZXMgLnNsaWNlKCkgYnVmZmVyXFwncyBtZW1vcnknLCBmdW5jdGlvbih0KSB7XG4gICAgaWYgKCFCLlRZUEVEX0FSUkFZX1NVUFBPUlQpXG4gICAgICByZXR1cm4gdC5lbmQoKTtcbiAgICB2YXIgYnVmMSA9IG5ldyBCKDI2KTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI2OyBpKyspIHtcbiAgICAgIGJ1ZjFbaV0gPSBpICsgOTc7XG4gICAgfVxuICAgIHZhciBidWYyID0gYnVmMS5zbGljZSgwLCAzKTtcbiAgICB0LmVxdWFsKGJ1ZjIudG9TdHJpbmcoJ2FzY2lpJywgMCwgYnVmMi5sZW5ndGgpLCAnYWJjJyk7XG4gICAgYnVmMVswXSA9ICchJy5jaGFyQ29kZUF0KDApO1xuICAgIHQuZXF1YWwoYnVmMi50b1N0cmluZygnYXNjaWknLCAwLCBidWYyLmxlbmd0aCksICchYmMnKTtcbiAgICB0LmVuZCgpO1xuICB9KTtcbn0pKHJlcXVpcmUoJ3Byb2Nlc3MnKSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
